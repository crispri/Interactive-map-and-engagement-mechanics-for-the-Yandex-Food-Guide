openapi: "3.0.2"
info:
    title: API для Гида
    version: "1.0"
servers:
    -   url: http://51.250.39.97:8080/
components:
    schemas:
        score_list:
            type: object
            properties:
                restaurant_id:
                    type: integer
                score:
                    type: integer
            required:
                - restaurant_id
                - score


        coordinates:
            type: object
            properties:
                lat:
                    description: Latitude
                    type: number
                    format: double
                lon:
                    description: Longitude
                    type: number
                    format: double
            required:
                - lat
                - lon
        restaurant:
            type: object
            properties:
                id: 
                    type: string
                coordinates:
                    $ref: "#/components/schemas/coordinates"
                name:
                    type: string
                description:
                    type: string
                address:
                    type: string
                is_approved:
                    type: boolean
                rating:
                    type: number
                    format: double
                price_lower_bound:
                    type: integer
                price_upper_bound:
                    type: integer
                tags:
                    type: array
                    items:
                        type: string
                            
                is_favorite:
                    type: boolean
            required:
                - id
                - coordinates
                - name
                - description
                - address
                - is_public
                - rating
                - price_lower_bound
                - price_upper_bound
                - tags
                - is_favorite

    # responses:
    #     UnauthorizedError:
    #         description: X-Ya-User-Ticket key is missing or invalid
    securitySchemes:
        UserTicketAuth:
            type: apiKey
            in: header
            name: Authorization
paths:
    /guide/v1/restaurants:
        post:
            description: Get recommended establishments in the area
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                lower_left_corner:
                                    description: coordinates
                                    $ref: "#/components/schemas/coordinates"
                                top_right_corner:
                                    description: coordinates
                                    $ref: "#/components/schemas/coordinates"
                                max_count:
                                    type: integer
                            required:
                                - coordinates
            security:
                -   UserTicketAuth: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    items:
                                        type: array
                                        items:
                                            $ref: '#/components/schemas/restaurant'
                '400':
                    description: invalid input parameters
                '401':
                    description: unauthorized


    /guide/v1/ml_sort:
        post:
            description: Sort restaurants ids list by ML (mock)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                restaurant_ids:
                                    description: List of restaurant ids
                                    type: array
                                    items: {
                                        type: integer
                                    }
                            required:
                                - restaurant_ids
            security:
                - UserTicketAuth: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: object
                                properties:
                                    restaurant_ids:
                                        type: array
                                        items: {
                                            type: integer
                                        }
                '400':
                    description: invalid input parameters
                '401':
                    description: unauthorized



    /guide/v1/ml_rate:
        post:
            description: Rate restaurants ids list by ML based on user and restaurants (mock)
            requestBody:
                required: true
                content:
                    application/json:
                        schema:
                            type: object
                            properties:
                                restaurant_ids:
                                    description: List of restaurant ids
                                    type: array
                                    items: {
                                        type: integer
                                    }
                            required:
                                - restaurant_ids
            security:
                - UserTicketAuth: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    $ref: '#/components/schemas/score_list'
                '400':
                    description: invalid input parameters
                '401':
                    description: unauthorized



    /guide/v1/restaurant/{id}:
        get:
            description: Get restaurant by id
            parameters:
                - in: path
                  name: id
                  required: true
                  description: uuid of the user to get.
                  schema:
                    type: string
            security:
                -   UserTicketAuth: [ ]
            responses:
                '200':
                    description: OK
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/restaurant'
                '400':
                    description: invalid input parameters
                '401':
                    description: unauthorized